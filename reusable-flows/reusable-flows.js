"use strict";module.exports=function(e){e.nodes.registerType("reusable-in",(function(n){e.nodes.createNode(this,n);var o=this;o.on("input",(function(e,n,t){(n=n||function(){o.send.apply(o,arguments)})(e),t&&t()}));var t="reusable:"+n.id;function r(e){o.receive(e)}e.events.on(t,r),o.on("close",(function(){e.events.removeListener(t,r)}))})),e.nodes.registerType("reusable-out",(function(n){e.nodes.createNode(this,n);var o=this;o.on("input",(function(n,t,r){try{var s=n._reusableFlows,l=s.Stack.pop();if(null==l)throw new Error;s.Mode="return",e.events.emit("reusable:"+l,n),r&&r()}catch(e){console.error("broken msg",n),o.error("broken msg"),o.status({fill:"red",shape:"dot",text:"broken msg"}),r&&r()}}))})),e.nodes.registerType("reusable",(function(n){var o;e.nodes.createNode(this,n);var t=this;t.on("input",(function(r,s,l){if(s=s||function(){t.send.apply(t,arguments)},null==o)return s(r),void(l&&l());var a=r._reusableFlows;switch(null==a&&(a=r._reusableFlows={Stack:[]}),a.Mode){case void 0:a.Stack.push(n.id),e.events.emit("reusable:"+o.id,r);break;case"return":delete a.Mode,s(r),l&&l();break;default:console.error("broken msg",r),t.error("broken msg"),t.status({fill:"red",shape:"dot",text:"broken msg"}),s(null),l&&l()}}));var r="reusable:"+n.id;function s(e){t.receive(e)}e.events.on(r,s);var l="reusable:"+n.id+"-FlowToCall";function a(e){null==(o=e)?t.status({fill:"yellow",shape:"ring",text:"no flow to call"}):t.status({})}e.events.on(l,a),t.on("close",(function(){e.events.removeListener(r,s),e.events.removeListener(l,a)}))})),e.events.on("flows:started",(function(){console.log("\n\n\nmapCallersToCallees");var n=Object.create(null),o=Object.create(null),t=Object.create(null),r=Object.create(null);function s(e){if("tab"!==e.type){var t=o[e.z];return null==t?n[e.z]:t}}function l(e){if("tab"===e.type)return e;var t=n[e.z];return null==t&&(t=o[e.z]),null==t?void 0:l(t)}function a(n,o){console.log("mapping ",n,"->",null==o?"-":'"'+o.name+'"'),e.events.emit("reusable:"+n+"-FlowToCall",o)}e.nodes.eachNode((function(e){switch(e.type){case"tab":n[e.id]=e;break;case"subflow":o[e.id]=e;break;case"reusable-in":t[e.id]=e;break;case"reusable":r[e.id]=e}})),function(){for(var e in console.log("Workspaces:"),n){var o=n[e];console.log("  "+e+': "'+o.label+'"')}}(),function(){for(var e in console.log("ReusablesIn:"),t){var n=t[e];console.log("  "+e+': "'+n.name+'"')}}(),function(){for(var e in console.log("Reusables:"),r){var n=r[e];console.log("  "+e+': "'+n.name+'" -> "'+n.target+'"')}}();e:for(var i in r){var u=r[i],c=(u.target||"").toLowerCase().split(":"),f=c[0],v=c[1];for(var b in null==v?(v=f.trim(),f=""):(f=f.trim(),v=v.trim()),t){var d=t[b];if((d.name||"").toLowerCase()===v)if(""===f){if(u.z===d.z){a(i,d);continue e}}else{if(f!==((l(d)||{}).label||"").toLowerCase())continue;if(u.z===d.z||u.z!==d.z&&"global"===d.scope&&"subflow"!==(s(d)||{}).type){a(i,d);continue e}}}a(i,void 0)}console.log("\n")}))};
//# sourceMappingURL=reusable-flows.js.map
